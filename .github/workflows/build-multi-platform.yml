name: Build and Release Executables

on:
    push:
        branches:
            - main
    workflow_dispatch:
        inputs:
            version:
                description: "v0.0.1"
                required: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Build application
        run: |
          pyinstaller --onefile src/app.py

      - name: Rename executable
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            mv dist/app.exe dist/ocr-reader-windows.exe
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            mv dist/app dist/ocr-reader-linux
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            mv dist/app dist/ocr-reader-macos
          fi
        shell: bash

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ocr-reader-${{ matrix.os }}
          path: dist/*

      - name: Minimize uv cache
        run: uv cache prune --ci  

  release:
      needs: build
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Download all build artifacts
          uses: actions/download-artifact@v4
          with:
            merge-multiple: true

        - name: List downloaded files (Debugging)
          run: ls -R

        - name: Make files executable (Linux/Mac)
          run: chmod +x ocr-reader-* || true

        - name: Create GitHub Release
          uses: softprops/action-gh-release@v2
          with:
            tag_name: ${{ github.event.inputs.version }}
            name: Release ${{ github.event.inputs.version }}
            draft: false
            prerelease: false
            files: |
              ocr-reader-linux
              ocr-reader-windows.exe
              ocr-reader-macos