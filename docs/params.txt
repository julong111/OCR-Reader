图像处理参数设计文档
========================

本文档旨在梳理和记录图像处理各阶段参数的设计思路、演进过程和最终决策，以便于后续的维护和功能迭代。

---

## 设计历程与决策 (Design History and Decisions)

### 1. 初始问题：控制精度与参数适应性
项目初期，我们面临两个核心问题：
*   **控制精度低:** UI中原始的`QSlider`滑块尺寸小，在触摸板上操作时尤其难以精确控制，经常出现数值跳变或难以微调的情况。
*   **参数适应性差:** 许多关键参数（如二值化的块大小、噪声的面积阈值）的理想值与图像的具体内容（如分辨率、字符大小）强相关。固定的参数范围和默认值导致在处理不同来源的古籍图片时，用户需要花费大量时间去寻找合适的参数，体验不佳。

### 2. 第一阶段解决方案：优化控件
为了解决上述问题，我们进行了第一轮优化，核心是改善用户输入体验。
*   **决策一：创建复合控件。** 我们没有替换UI库，而是创建了一个名为`SliderSpinBox`的复合控件。它将`QSlider`（用于快速、大幅度的调节）和`QSpinBox`（用于精确的数值输入）结合起来，让用户既能拖拽也能精确输入。
*   **决策二：修复输入问题。**
    *   **小数点问题:** 我们创建了`SmartSpinBox`，通过重写键盘事件，使其能同时识别中/英文输入法下的句号键，并统一输入为标准的小数点`.`，彻底解决了输入问题。
    *   **滚动干扰问题:** 我们重写了`CustomSlider`的`wheelEvent`，让它忽略鼠标滚轮（及触摸板滚动）事件，避免了用户在滚动参数面板时意外修改滑块值。

### 3. 第二阶段解决方案：智能化参数设置
在解决了“如何调”的问题后，我们开始解决“调多少”的问题。目标是让程序能根据图像内容，为用户推荐一套合理的初始参数。
*   **初步想法:** 让用户框选一个“标准字符”，程序根据其尺寸自动推断参数。
*   **想法演进与挑战:**
    1.  **单样本问题:** 讨论发现，只用一个标准字符的面积来推断尺寸范围，可能会误删过小的标点符号（如句号）或保留过大的污渍。
    2.  **双样本方案:** 为解决此问题，我们最终决定采用更精确的**双样本方案**：让用户分别框选一个“标准字”和一个“最小符号”。这为我们提供了尺寸范围的上限和下限。
    3.  **基准选择:** 我们确定以更稳定的“字符高度”作为推断块大小等几何相关参数的基准，以“面积”作为推断噪声过滤阈值的基准。
*   **最终决策与实现:**
    *   **UI:** 在第一阶段面板增加“智能参数设置”区域，包含“框选标准字”和“框选最小符号”两个按钮，并提供实时反馈标签显示测量出的尺寸。
    *   **交互:** 框选样本时，使用绿色的辅助框以示区别。
    *   **参数关联:**
        *   **标准字高度 (`H_char`)** -> **二值化块大小 (`thresh_blocksize`)**: 默认值设为 `H_char` 附近的奇数。
        *   **标准字面积 (`A_char`)** -> **最大面积阈值 (`large_noise_thresh`)**: 默认值设为 `(A_char / A_total) * 1.5`。
        *   **最小符号面积 (`A_sym`)** -> **最小面积阈值 (`small_noise_thresh`)**: 默认值设为 `(A_sym / A_total) * 0.8`。
    *   **动态范围与步进:**
        *   **块大小 (`thresh_blocksize`)** 的范围根据图像尺寸动态调整，其标签也随之更新，明确告知用户当前有效范围。
        *   所有`SliderSpinBox`的步进值根据其总范围自动计算 (`range / 100`)，以提供舒适、比例恰当的微调体验。

---

## 第二阶段：二值化 (Binarization)

### 1. 高斯模糊 - 内核大小 (blur_ksize)
*   **理论依据**: 控制模糊程度的窗口大小。必须是正奇数。它通过对邻域像素进行加权平均来平滑图像，有效去除高斯噪声。
*   **与图像尺寸关系**: **弱相关**。对于分辨率极高的图像，可能需要稍大的内核才能达到与低分辨率图像相似的视觉模糊效果。但通常它更多地与图像中噪点或纹理的尺寸有关。
*   **控件优化建议**:
    *   **类型**: 整数 (Integer)。
    *   **范围**: 1-31 已经是一个合理的范围。
    *   **步进 (Step)**: 2 (通过`slider.setSingleStep(2)`实现，确保拖拽时值为奇数)。
    *   **智能设置**: 无需根据图像尺寸动态调整。

### 2. 自适应阈值 - 块大小 (thresh_blocksize)
*   **理论依据**: 计算局部阈值的邻域大小。必须是正奇数。它决定了算法适应光照变化的尺度。太小会产生噪点，太大则失去“自适应”的意义。
*   **与图像尺寸关系**: **强相关**。一个理想的块大小应该略大于图像中平均字符的尺寸。
*   **控件优化建议**:
    *   **类型**: 整数 (Integer)。
    *   **范围**: **动态调整**。例如，可以将最大值设置为 `min(图像宽度, 图像高度) / 4`，并确保为奇数。这样可以防止用户设置一个不合理的超大值。
    *   **步进 (Step)**: 2 (通过`slider.setSingleStep(2)`实现)。
    *   **智能设置**: **已实现**。通过“框选标准字”功能，程序会根据样本字符高度自动设置一个理想的初始值，并动态调整控件范围。

### 3. 自适应阈值 - 常量C (thresh_c)
*   **理论依据**: 从计算出的邻域均值或高斯加权均值中减去的一个常数。用于微调阈值，可以为正、负或零。
*   **与图像尺寸关系**: **无直接关系**。它主要取决于邻域内的局部对比度。
*   **控件优化建议**:
    *   **类型**: 整数 (Integer)。
    *   **范围**: 0-50 是一个合理的范围。
    *   **步进 (Step)**: 1。
    *   **智能设置**: 无需动态调整。

---

## 第三阶段：噪声移除 (Noise Removal)

### 1. 形态学/膨胀 - 内核大小 (morph_ksize, dilate_ksize)
*   **理论依据**: 形态学操作中结构元素的大小。必须是正奇数。它决定了要移除的噪点的大小或要连接的笔画间隙的大小。
*   **与图像尺寸关系**: **弱相关**。与高斯模糊类似，它更多地与目标特征（噪点、笔画间隙）的像素尺寸有关。
*   **控件优化建议**:
    *   **类型**: 整数 (Integer)。
    *   **范围**: 1-21 是一个合理的范围。
    *   **步进 (Step)**: 2 (通过`slider.setSingleStep(2)`实现)。
    *   **智能设置**: 无需动态调整。

### 2. 按尺寸过滤 - 最小/最大面积阈值 (small_noise_thresh, large_noise_thresh)
*   **理论依据**: 根据轮廓（连通区域）的面积占总图像面积的百分比进行过滤。
*   **与图像尺寸关系**: **已通过百分比实现自适应**。这是一个非常好的设计，因为它已经将绝对的像素面积转换为相对值，从而与图像尺寸解耦。
*   **控件优化建议**:
    *   **类型**: 浮点数 (Float)。
    *   **精度 (Decimals)**: 3位小数已经足够精细。
    *   **范围**: 0.000 - 10.000 (最小) 和 0.000 - 100.000 (最大) 是合理的。
    *   **步进 (Step)**: **已实现**。通过`SliderSpinBox`的智能步进功能自动设置。
    *   **智能设置**: **已实现**。通过“框选标准字”和“框选最小符号”功能，程序会自动设置这两个阈值的理想初始值。

### 3. 按形状过滤 - 长宽比 (min_aspect_ratio, max_aspect_ratio)
*   **理论依据**: 轮廓的包围矩形的 `宽度 / 高度`。用于过滤掉形状过于细长或扁平的对象。
*   **与图像尺寸关系**: **无直接关系**。这是一个形状描述符，与尺寸无关。
*   **控件优化建议**:
    *   **类型**: 浮点数 (Float)。
    *   **精度 (Decimals)**: 3位小数。
    *   **范围**: 0.000 - 5.000 是一个比较实用的范围。
    *   **步进 (Step)**: **已实现**。通过`SliderSpinBox`的智能步进功能自动设置。
    *   **智能设置**: 无需动态调整。

### 4. 按形状过滤 - 凸性比 (min_convexity_ratio)
*   **理论依据**: 轮廓面积与其凸包（Convex Hull）面积的比值。一个完美的凸形（如实心矩形）比值为1.0。用于衡量轮廓的“饱满”程度，可以有效区分文字和不规则噪点。
*   **与图像尺寸关系**: **无直接关系**。这是一个形状描述符。
*   **控件优化建议**:
    *   **类型**: 浮点数 (Float)。
    *   **精度 (Decimals)**: 3位小数。
    *   **范围**: 0.800 - 1.000 是最常用的区间。
    *   **步进 (Step)**: **已实现**。通过`SliderSpinBox`的智能步进功能自动设置。
    *   **智能设置**: 无需动态调整。

### 5. 按形状过滤 - 最小顶点数 (vertex_count)
*   **理论依据**: 轮廓的多边形近似的顶点数量。用于过滤掉几何形状过于简单的对象（如直线、矩形）。
*   **与图像尺寸关系**: **间接相关**。同一对象在更高分辨率的图像中，其轮廓可能更复杂，从而产生更多的顶点。但这种关系不强，通常不需要动态调整。
*   **控件优化建议**:
    *   **类型**: 整数 (Integer)。
    *   **范围**: 3 - 100 是一个合理的范围。
    *   **步进 (Step)**: 1。
    *   **智能设置**: 无需动态调整。
